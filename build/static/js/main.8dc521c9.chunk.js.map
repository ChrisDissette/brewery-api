{"version":3,"sources":["components/BrewTable.jsx","components/Form.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["BrewTable","props","breweries","resetHandler","Box","display","alignItems","justifyContent","flexDirection","px","xs","sm","md","lg","TableContainer","Table","TableHead","sx","bgcolor","TableRow","TableCell","color","TableBody","map","item","i","name","city","Button","my","width","variant","onClick","Form","setCity","fetchBreweryInfo","height","Input","placeholder","onChange","event","target","value","mt","App","useState","setBreweries","submitted","setSubmitted","className","minHeight","Typography","fontWeight","textAlign","mb","length","axios","get","then","res","console","log","data","catch","err","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8dc521c9.chunk.js","sourcesContent":["import Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button'\r\n\r\nconst BrewTable = (props) => {\r\n\r\n    const {breweries, resetHandler} = props\r\n\r\n    return (\r\n        <div>\r\n            <Box display='flex' alignItems='center' justifyContent='center' flexDirection='column' px={{xs:6, sm:7, md:8, lg:10}}>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableHead sx={{bgcolor:'secondary.main'}}>\r\n                            <TableRow>\r\n                                <TableCell sx={{color:'white'}}>\r\n                                    Brewery Name\r\n                                </TableCell>\r\n                                <TableCell sx={{color:'white'}}>\r\n                                    Brewery City\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                breweries.map((item, i) => (\r\n                                <TableRow key={i}>\r\n                                    <TableCell>{item.name}</TableCell>\r\n                                    <TableCell>{item.city}</TableCell>\r\n                                </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Button sx={{my:5, width:[200,250,300,400]}} variant='contained' color='error' onClick={resetHandler}>Reset</Button>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BrewTable\r\n","import Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button'\r\nimport Input from '@mui/material/Input'\r\n\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst Form = (props) => {\r\n\r\n    const {setCity, fetchBreweryInfo} = props\r\n\r\n    return (\r\n        <Box height='25vh' display='flex' justifyContent='center' alignItems='center' flexDirection='column'>\r\n            <Input placeholder='Enter a City' onChange={(event) => {setCity(event.target.value)}} sx={{width:[200,250,300,400]}} />\r\n            <Button sx={{mt:3, width:[200,250,300,400]}} variant='contained' onClick={fetchBreweryInfo}>Fetch!</Button>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import axios from 'axios'\nimport {useState} from 'react'\nimport BrewTable from './components/BrewTable'\nimport Form from './components/Form'\n\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button'\nimport Input from '@mui/material/Input'\n\nimport Typography from '@mui/material/Typography';\n\nfunction App() {\n\n  const [breweries, setBreweries] = useState([])\n  const [city, setCity] = useState('')\n  const [submitted, setSubmitted] = useState(false)\n\n  const fetchBreweryInfo = event => {\n    if(city.length === 0){\n      console.log('validation')\n      return\n    } else {\n    setSubmitted(true)\n    axios.get(`https://api.openbrewerydb.org/breweries?by_city=${city}`)\n      .then(res => {\n        console.log(res.data)\n        setBreweries(res.data)\n      })\n      .catch (err => console.log(err))\n    }\n  }\n\n  const resetHandler = () => {\n    setSubmitted(false)\n    setBreweries([])\n  }\n\n  return (\n    <div className=\"App\">\n      <Box minHeight='100vh'>\n        <Typography fontWeight='bold' textAlign='center' variant='h1' sx={{mt:10, mb:3}}>Brewery API</Typography>\n        <Typography variant='h4' textAlign='center'>Enter a city to view local breweries!</Typography>\n        <Form setCity={setCity} fetchBreweryInfo={fetchBreweryInfo} />\n        {\n          submitted ?\n          <BrewTable breweries={breweries} resetHandler={resetHandler} />\n          : ''\n        }\n      </Box>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}